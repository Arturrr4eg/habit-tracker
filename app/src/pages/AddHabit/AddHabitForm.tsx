import { useState, useEffect } from 'react'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º useEffect –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ñ–æ—Ä–º—ã –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∫–∏
import styles from './AddHabit.module.scss';
import { Habit } from '../../components/HabitCard';

// –î–æ–±–∞–≤–ª—è–µ–º initialTitle –≤ —Ç–∏–ø –ø—Ä–æ–ø—Å–æ–≤, –¥–µ–ª–∞–µ–º –µ–≥–æ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º
type AddHabitFormProps = {
  onAdd: (habitData: HabitFormData) => void;
  onClose: () => void;
  initialTitle?: string; // <-- –î–æ–±–∞–≤–ª—è–µ–º —Å—é–¥–∞, –¥–µ–ª–∞–µ–º –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º —Å –ø–æ–º–æ—â—å—é '?'
}
type HabitFormData = Omit<Habit, 'id' | 'completedToday'>;

const AddHabitForm: React.FC<AddHabitFormProps> = ({ onAdd, initialTitle }) => {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º initialTitle –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
  const [title, setTitle] = useState(initialTitle || '');
  const [goal, setGoal] = useState('');
  const [duration, setDuration] = useState(21);
  const [startTime, setStartTime] = useState('08:00');
  const [endTime, setEndTime] = useState('20:00');
  const [icon, setIcon] = useState('üî•');

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞ —Ñ–æ—Ä–º—ã, –∫–æ–≥–¥–∞ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è (initialTitle —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è undefined)
  // –ò–ª–∏ –∫–æ–≥–¥–∞ initialTitle –º–µ–Ω—è–µ—Ç—Å—è –∏–∑–≤–Ω–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –Ω–æ–≤–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–æ–º–∞–Ω–¥–µ –±–µ–∑ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∫–∏)
  useEffect(() => {
    setTitle(initialTitle || '');
    if (!initialTitle) { // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ initialTitle –ø—É—Å—Ç–æ–π (—Ç.–µ. –º–æ–¥–∞–ª–∫–∞ –∑–∞–∫—Ä—ã–ª–∞—Å—å –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∞ –≤—Ä—É—á–Ω—É—é)
      setGoal('');
      setDuration(21);
      setStartTime('08:00');
      setEndTime('20:00');
      setIcon('üî•');
    }
  }, [initialTitle]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç initialTitle


  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º, —Ö–æ—Ç—è –ø–æ–ª–µ –∏ —Ç–∞–∫ required
    if (!title.trim()) {
      alert('–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
      return;
    }

    const newHabit = {
      title: title.trim(), // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
      goal,
      duration,
      startTime,
      endTime,
      progress: 0,
      icon,
      completedToday: false,
    };
    onAdd(newHabit);
    // onClose() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ handleAddHabit –≤ App.tsx
  };

  return (
    <form className={styles.form} onSubmit={handleSubmit}>
      <h2>–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤—ã—á–∫—É</h2>

      <label>
        –ù–∞–∑–≤–∞–Ω–∏–µ:
        <input
          type="text"
          value={title}
          onChange={e => setTitle(e.target.value)}
          required
        />
      </label>

      <label>
        –¶–µ–ª—å:
        <input
          type="text"
          value={goal}
          onChange={e => setGoal(e.target.value)}
        />
      </label>

      <label>
        –°—Ä–æ–∫ (–≤ –¥–Ω—è—Ö):
        <input
          type="number"
          value={duration}
          onChange={e => setDuration(Number(e.target.value))}
          min={1}
          max={365}
        />
      </label>

      <label>
        –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:
        <input
          type="time"
          value={startTime}
          onChange={e => setStartTime(e.target.value)}
        />
      </label>

      <label>
        –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è:
        <input
          type="time"
          value={endTime}
          onChange={e => setEndTime(e.target.value)}
        />
      </label>

      <label>
        –ò–∫–æ–Ω–∫–∞ (emoji):
        <input
          type="text"
          value={icon}
          onChange={e => setIcon(e.target.value)}
          maxLength={2}
        />
      </label>

      <button type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
    </form>
  );
};

export default AddHabitForm;

