import { useEffect, useRef, useState } from 'react';
import { createAssistant, createSmartappDebugger, AssistantAppState } from '@salutejs/client';
import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';
import Home from './pages/Home';
import Stats from './pages/Stats';
import './styles/App.scss';
import { Habit } from './components/HabitCard';
import Modal from './components/Modal/Modal';
import AddHabitForm from './pages/AddHabit/AddHabitForm';


const isDev = import.meta.env.MODE === 'development';



const initializeAssistant = (getState: () => AssistantAppState
  ) => {
  if (isDev) {
    return createSmartappDebugger({
      token: import.meta.env.VITE_SMARTAPP_TOKEN ?? '',
      initPhrase: '–∑–∞–ø—É—Å—Ç–∏ –¢—Ä–µ–∫–µ—Ä –ü—Ä–∏–≤—ã—á–µ–∫',
      getState,
      nativePanel:{
        defaultText: "–ü–æ–≥–æ–≤–æ—Ä–∏ —Å–æ –º–Ω–æ–π –±—Ä–∞—Ç–∏—à–∫–∞",
			screenshotMode: false,
			tabIndex: -1,
      }
    });
  }
    return createAssistant({ getState });
};

const App = () => {
  const assistantRef = useRef<ReturnType<typeof createAssistant>>();
  const [habits, setHabits] = useState<Habit[]>([
    {
      title: '–ü–∏—Ç—å –≤–æ–¥—É',
      duration: 21,
      startTime: '07:00',
      endTime: '08:00',
      progress: 40,
      goal: '–ü–∏—Ç—å 2 –ª–∏—Ç—Ä–∞ –≤–æ–¥—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
      icon: 'üíß',
      completedToday: true,
    },
    {
      title: '–ß–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É',
      duration: 30,
      startTime: '20:00',
      endTime: '21:00',
      progress: 60,
      goal: '–ü—Ä–æ—á–∏—Ç–∞—Ç—å 10 —Å—Ç—Ä–∞–Ω–∏—Ü –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
      icon: 'üìö',
      completedToday: false,
    },
  ]);



  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç—å—é –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const [showAddHabitModal, setShowAddHabitModal] = useState(false);
  // –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏ –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
  const [initialHabitTitle, setInitialHabitTitle] = useState<string | undefined>(undefined);



const handleDeleteHabit = (indexToDelete: number) => {
      console.log('Attempting to delete habit at index:', indexToDelete);
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–Ω–¥–µ–∫—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω
      if (indexToDelete >= 0 && indexToDelete < habits.length) {
          setHabits(prevHabits => {
              // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –ø—Ä–∏–≤—ã—á–µ–∫, –∏—Å–∫–ª—é—á–∞—è –ø—Ä–∏–≤—ã—á–∫—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É
              const newHabits = prevHabits.filter((_, index) => index !== indexToDelete);
              console.log('New habits list after deletion:', newHabits);
              return newHabits;
          });
      } else {
          console.warn('Invalid index for deletion:', indexToDelete);
          // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –µ—Å–ª–∏ –∏–Ω–¥–µ–∫—Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω
      }
  };




  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const handleOpenModal = () => setShowAddHabitModal(true);
  const handleCloseModal = () => {
    setShowAddHabitModal(false);
    // –û—á–∏—â–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    setInitialHabitTitle(undefined);
  };


  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–π —Ç–∞–∫–∂–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  const handleAddHabit = (newHabit: Habit) => {
    console.log('–ù–æ–≤–∞—è –ø—Ä–∏–≤—ã—á–∫–∞ –≤—Ä—É—á–Ω—É—é:', newHabit);
    setHabits((prev) => [...prev, newHabit]);
    handleCloseModal(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
  };


   useEffect(() => {
    const assistant = initializeAssistant(() => {
        // ... –≤–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è getStateForAssistant, –≤–æ–∑–º–æ–∂–Ω–æ –ø—É—Å—Ç–∞—è –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–∞
        return {};
    });
    assistantRef.current = assistant;
/* eslint-disable  @typescript-eslint/no-explicit-any */
    assistant.on('data', (event: any) => { // –¢–µ–ø–µ—Ä—å event –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å event.action
      console.log('assistant.on(data)', event);

      // *** –í–æ—Ç —Ç—É—Ç –∫–ª—é—á–µ–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: –ø—Ä–æ–≤–µ—Ä—è–µ–º event.action ***
      if (event.action) {
        console.log('Assistant action received:', event.action);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è 'add_habit' –∏ –µ—Å—Ç—å –ø–æ–ª–µ title
        if (event.action.type === 'add_habit' && typeof event.action.title === 'string') {
          const habitTitleFromAssistant = event.action.title;
          console.log('–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏ –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:', habitTitleFromAssistant);

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
          setInitialHabitTitle(habitTitleFromAssistant);

          // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
          setShowAddHabitModal(true);
        }
        // –î–æ–±–∞–≤—å—Ç–µ –∑–¥–µ—Å—å –¥—Ä—É–≥–∏–µ else if –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥—Ä—É–≥–∏—Ö action.type, –µ—Å–ª–∏ –æ–Ω–∏ –±—É–¥—É—Ç
      }
      // ... –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ —Å–æ–±—ã—Ç–∏–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    });

    // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ assistant.on

    return () => {
        // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    };

  }, [habits]);


  return (
    <Router>
      <div className="app-container">
        <nav className="navbar">
          <h1 className="navbar-title">üß† –•–∞–±–∏—Ç –¢—Ä–µ–∫–µ—Ä</h1>
          <div className="navbar-links">
            <Link to="/" className="nav-link">–ì–ª–∞–≤–Ω–∞—è</Link>
            {/* –ò–∑–º–µ–Ω—è–µ–º Link –Ω–∞ div –∏–ª–∏ button –∏ –¥–æ–±–∞–≤–ª—è–µ–º onClick */}
            <div className="nav-link" onClick={handleOpenModal} style={{ cursor: 'pointer' }}>
              –î–æ–±–∞–≤–∏—Ç—å
            </div>
            <Link to="/stats" className="nav-link">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</Link>
          </div>
        </nav>

        <main className="main-content">
          <Routes>
            <Route path="/" element={<Home habits={habits}  onDeleteHabit={handleDeleteHabit}/>} />
            <Route path="/stats" element={<Stats />} />
          </Routes>

          {/* –£—Å–ª–æ–≤–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
          {showAddHabitModal && (
            <Modal onClose={handleCloseModal}>
              {/* –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ AddHabitForm */}
              <AddHabitForm
                onAdd={handleAddHabit}
                onClose={handleCloseModal}
                initialTitle={initialHabitTitle} // <-- –ü–µ—Ä–µ–¥–∞–µ–º —Å—é–¥–∞
              />
            </Modal>
          )}

        </main>
      </div>
    </Router>
  );
};

export default App;
