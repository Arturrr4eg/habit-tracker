import { useEffect, useRef, useState, useCallback, useMemo } from 'react';
import {
	createAssistant,
	createSmartappDebugger,
	AssistantAppState,
} from '@salutejs/client';
import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';
import Home from './pages/Home/Home';
import Stats from './pages/Stats/Stats';
import './styles/App.scss';
import { Habit } from './components/HabitCard';
import Modal from './components/Modal/Modal';
import AddHabitForm from './pages/AddHabit/AddHabitForm';
import DeleteConfirmation from './components/DeleteConfirmation/DeleteConfirmation';
import CompletionModal from './components/CompletionModal/CompletionModal';
import myCustomIcon from "/iconxd.png"



const DEFAULT_HABITS: Habit[] = [
  {
    id: Date.now().toString() + Math.random().toString(16).slice(2),
    title: '–ü–∏—Ç—å –≤–æ–¥—É',
    duration: 21,
    startTime: '07:00',
    endTime: '08:00',
    progress: 7,
    goal: '–ü–∏—Ç—å 2 –ª–∏—Ç—Ä–∞ –≤–æ–¥—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
    icon: 'üíß',
    lastCompletedDate: undefined,
  },
  {
    id: Date.now().toString() + Math.random().toString(16).slice(2),
    title: '–ß–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É',
    duration: 30,
    startTime: '20:00',
    endTime: '21:00',
    progress: 15,
    goal: '–ü—Ä–æ—á–∏—Ç–∞—Ç—å 10 —Å—Ç—Ä–∞–Ω–∏—Ü –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
    icon: 'üìö',
    lastCompletedDate: undefined,
  },
];


const getTodayDateString = (): string => {
	const today = new Date();
	const year = today.getFullYear();
	const month = (today.getMonth() + 1).toString().padStart(2, '0');
	const day = today.getDate().toString().padStart(2, '0');
	return `${year}-${month}-${day}`;
};

const isDev = import.meta.env.MODE === 'development';

const generateUniqueId = (): string => {
	return Date.now().toString() + Math.random().toString(16).slice(2);
};

const initializeAssistant = (getState: () => AssistantAppState, getRecoveryState: () => unknown) => {
	if (isDev) {
		return createSmartappDebugger({
			token: import.meta.env.VITE_SMARTAPP_TOKEN!,
			initPhrase: `–ó–∞–ø—É—Å—Ç–∏ ${import.meta.env.VITE_APP_SMARTAPP}`,
			getState,
			getRecoveryState,
			nativePanel: {
				defaultText: '–ó–∞–ø—É—Å—Ç–∏ –º–µ–Ω—è!',
				screenshotMode: false,
				tabIndex: -1,
			},
		});
	}
	return createAssistant({ getState, getRecoveryState });
};


const STORAGE_KEY = 'habitTrackerData';

const loadFromStorage = (): { habits: Habit[] } => {
  try {
    const data = localStorage.getItem(STORAGE_KEY);
    if (data) {
      const parsed = JSON.parse(data);
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—ã –∏–∑ —Å—Ç—Ä–æ–∫
      const habits = parsed.habits.map((habit: Habit) => ({
        ...habit,
        lastCompletedDate: habit.lastCompletedDate
          ? habit.lastCompletedDate
          : undefined
      }));
      return { habits };
    }
  } catch (e) {
    console.error('Failed to load data', e);
  }
  return { habits: DEFAULT_HABITS };
};

const saveToStorage = (allHabits: Habit[]) => {
  try {
    const data = {
      habits: allHabits,
      // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
      savedAt: new Date().toISOString()
    };
    localStorage.setItem(STORAGE_KEY, JSON.stringify(data));
  } catch (e) {
    console.error('Failed to save data', e);
  }
};



const App = () => {
	const assistantRef = useRef<ReturnType<typeof createAssistant>>();
	const [allHabits, setAllHabits] = useState<Habit[]>(() => {
    const { habits } = loadFromStorage();
    return habits;
  });

  // –ü—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const activeHabits = useMemo(() =>
    allHabits.filter(habit => habit.progress < habit.duration),
    [allHabits]
  );

  const completedHabits = useMemo(() =>
    allHabits.filter(habit => habit.progress >= habit.duration),
    [allHabits]
  );

	  useEffect(() => {
    saveToStorage(allHabits);
  }, [allHabits]);


	// –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç—å—é –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
	const [showAddHabitModal, setShowAddHabitModal] = useState(false);
	// –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏ –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
	const [initialHabitTitle, setInitialHabitTitle] = useState<string | undefined>(
		undefined,
	);
;

	const getRecoveryState = useCallback(() => {
    return { allHabits };
  }, [allHabits]);

	const [showDeleteConfirmationModal, setShowDeleteConfirmationModal] = useState(false);
	const [habitToDeleteId, setHabitToDeleteId] = useState<string | null>(null);
	const [habitToDeleteTitle, setHabitToDeleteTitle] = useState<string | null>(null); // –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –≤ –º–æ–¥–∞–ª–∫–µ

	const [showCompletionModal, setShowCompletionModal] = useState(false);
	const [completedHabitDetails, setCompletedHabitDetails] = useState<Habit | null>(null); // –î–µ—Ç–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏

	const handleDeleteHabit = useCallback(
		(id: string) => {
			console.log('Requesting deletion confirmation for habit with ID:', id);
			// –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ activeHabits –∏–∑ –∑–∞–º—ã–∫–∞–Ω–∏—è useCallback
			const habit = activeHabits.find((h) => h.id === id);
			if (habit) {
				setHabitToDeleteId(id);
				setHabitToDeleteTitle(habit.title);
				setShowDeleteConfirmationModal(true);
			} else {
				console.warn('Attempted to delete non-existent habit with ID:', id);
			}
		},
		[activeHabits], // –ó–∞–≤–∏—Å–∏—Ç –æ—Ç activeHabits
	);

	const confirmDeleteHabit = (idToDelete: string | null) => {
		if (idToDelete) {
			console.log('Confirming deletion for habit with ID:', idToDelete);
			// –í—ã–ø–æ–ª–Ω—è–µ–º —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
			setAllHabits(prev => prev.filter(h => h.id !== idToDelete));
			// –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
			setHabitToDeleteId(null);
			setHabitToDeleteTitle(null);
			setShowDeleteConfirmationModal(false);
		}
	};

	const cancelDeleteHabit = () => {
		console.log('Deletion cancelled.');
		// –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è
		setHabitToDeleteId(null);
		setHabitToDeleteTitle(null);
		setShowDeleteConfirmationModal(false);
		// –í–æ–∑–º–æ–∂–Ω–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: "–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ."
	};

	// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
	const handleOpenModal = () => setShowAddHabitModal(true);
	const handleCloseModal = () => {
		setShowAddHabitModal(false);
		// –û—á–∏—â–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
		setInitialHabitTitle(undefined);
	};

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–π —Ç–∞–∫–∂–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
	const handleAddHabit = (
		newHabitData: Omit<Habit, 'id' | 'lastCompletedDate'>,
	) => {
		// –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç Habit —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID
		const habitWithId: Habit = {
			...newHabitData,
			id: generateUniqueId(), // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
			lastCompletedDate: undefined,
		};

		setAllHabits((prev) => [...prev, habitWithId]);
		handleCloseModal();
	};

	const handleCompleteToday = (idToComplete: string) => {
  console.log('Attempting to mark habit as completed today for ID:', idToComplete);
  const todayString = getTodayDateString();

  setAllHabits(prevHabits => {
    // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–∏–≤—ã—á–∫—É, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å
    const habitToUpdate = prevHabits.find(habit => habit.id === idToComplete);

    if (!habitToUpdate) {
      console.warn(`Habit with ID ${idToComplete} not found.`);
      return prevHabits;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
    if (habitToUpdate.progress < habitToUpdate.duration) {
      const newProgress = habitToUpdate.progress + 1;
      const updatedHabit = {
        ...habitToUpdate,
        progress: newProgress,
        lastCompletedDate: todayString
      };

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
      if (newProgress >= updatedHabit.duration) {
        console.log(`Habit with ID ${updatedHabit.id} completed!`);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
        setCompletedHabitDetails(updatedHabit);
        setShowCompletionModal(true);
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞—Å—Å–∏–≤ –ø—Ä–∏–≤—ã—á–µ–∫
      return prevHabits.map(habit =>
        habit.id === idToComplete ? updatedHabit : habit
      );
    }

    // –ï—Å–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å —É–∂–µ –¥–æ—Å—Ç–∏–≥ —Ü–µ–ª–∏
    console.log(`Habit with ID ${habitToUpdate.id} already completed.`);
    return prevHabits;
  });
};
	// *** –ö–û–ù–ï–¶ –ú–û–î–ò–§–ò–ö–ê–¶–ò–ò handleCompleteToday ***

	// *** –ú–û–î–ò–§–ò–¶–ò–†–û–í–ê–ù–ê confirmCompletion - —Ç–µ–ø–µ—Ä—å –æ–Ω–∞ —Ç–æ–ª—å–∫–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª–∫—É ***
	const confirmCompletion = () => {
		console.log('Completion modal confirmed (habit already moved).');
		// –ü—Ä–∏–≤—ã—á–∫–∞ —É–∂–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞ –≤ handleCompleteToday
		// –ü—Ä–æ—Å—Ç–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
		setCompletedHabitDetails(null);
		setShowCompletionModal(false);
		// –í–æ–∑–º–æ–∂–Ω–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç: "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –ø—Ä–∏–≤—ã—á–∫–∏!"
		// assistantRef.current?.sendData({ type: 'tts', value: `–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –ø—Ä–∏–≤—ã—á–∫–∏ "${completedHabitDetails?.title}"!` }); // –ü—Ä–∏–º–µ—Ä —Å –≥–æ–ª–æ—Å–æ–≤—ã–º –æ—Ç–≤–µ—Ç–æ–º
	};
	// *** –ö–û–ù–ï–¶ –ú–û–î–ò–§–ò–ö–ê–¶–ò–ò confirmCompletion ***

	// *** –ú–û–î–ò–§–ò–¶–ò–†–û–í–ê–ù–ê cancelCompletionModal - —Ç–µ–ø–µ—Ä—å –æ–Ω–∞ —Ç–æ–ª—å–∫–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª–∫—É ***
	const cancelCompletionModal = () => {
		console.log('Completion modal closed (habit already moved).');
		// –ü—Ä–∏–≤—ã—á–∫–∞ —É–∂–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞ –≤ handleCompleteToday
		// –ü—Ä–æ—Å—Ç–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
		setCompletedHabitDetails(null);
		setShowCompletionModal(false);
	};

	useEffect(() => {
		const assistant = initializeAssistant(() => {
			// ... –≤–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è getStateForAssistant, –≤–æ–∑–º–æ–∂–Ω–æ –ø—É—Å—Ç–∞—è –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–∞
			return {
				item_selector: {
					items: activeHabits.map((habit, index) => ({
						id: habit.id,
						title: habit.title,
						number: index + 1,
					})),
					ignored_words: ['—É–¥–∞–ª–∏—Ç—å', '—É–¥–∞–ª–∏', '–Ω–æ–º–µ—Ä', '–ø—Ä–∏–≤—ã—á–∫—É'],
				},
			};
		}, getRecoveryState);
		assistantRef.current = assistant;
		/* eslint-disable  @typescript-eslint/no-explicit-any */
		assistant.on('data', (event: any) => {
			// –¢–µ–ø–µ—Ä—å event –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å event.action
			console.log('assistant.on(data)', event);

			// *** –í–æ—Ç —Ç—É—Ç –∫–ª—é—á–µ–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: –ø—Ä–æ–≤–µ—Ä—è–µ–º event.action ***
			if (event.action) {
				console.log('Assistant action received:', event.action);

				// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è 'add_habit' –∏ –µ—Å—Ç—å –ø–æ–ª–µ title
				if (event.action.type === 'add_habit' && typeof event.action.title === 'string') {
					const habitTitleFromAssistant = event.action.title;
					console.log('–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏ –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:', habitTitleFromAssistant);

					// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
					setInitialHabitTitle(habitTitleFromAssistant);

					// –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
					setShowAddHabitModal(true);
				} else if (event.action.type === 'delete_habit') {
					// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª–µ id —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π
					// –¢–∏–ø HandledActions —É–∂–µ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç TypeScript, —á—Ç–æ —É delete_habit –µ—Å—Ç—å id// –ü—Ä–∏–≤–æ–¥–∏–º –∫ —Ç–∏–ø—É —É–¥–∞–ª–µ–Ω–∏—è

					// *** –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏ —Ç–∏–ø –ø–æ–ª—è id ***
					if (typeof event.action.id === 'string' && event.action.id) {
						const habitIdToDelete = event.action.id; // –ü–æ–ª—É—á–∞–µ–º ID –Ω–∞–ø—Ä—è–º—É—é –∏–∑ action

						console.log('Received delete_habit action for ID:', habitIdToDelete);

						// *** –í–´–ó–´–í–ê–ï–ú handle delete habit –ù–ê–ü–†–Ø–ú–£–Æ –° –ü–û–õ–£–ß–ï–ù–ù–´–ú ID ***
						// –õ–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–æ–º–µ—Ä—É –∏ –∏–Ω–¥–µ–∫—Å—É –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –±—ç–∫–µ–Ω–¥ –ø—Ä–∏—Å–ª–∞–ª ID
						handleDeleteHabit(habitIdToDelete);
						console.log(`Requested deletion for habit with ID: ${habitIdToDelete}`);
					} else {
						// –ï—Å–ª–∏ –ø–æ–ª–µ id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø—Ä–∏—à–ª–æ –æ—Ç –±—ç–∫–µ–Ω–¥–∞
						console.warn(
							'Received delete_habit action without a valid ID:',
							event.action,
						);
						// –í–æ–∑–º–æ–∂–Ω–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–ª—É—á–∏–ª –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏–≤—ã—á–∫–∏, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å."
						// assistantRef.current?.sendData({ type: 'tts', value: "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫—É—é –ø—Ä–∏–≤—ã—á–∫—É —É–¥–∞–ª–∏—Ç—å." });
					}
				}
				// --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –û–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏ –ø–æ ID ---

				// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ action
				else if (event.action.type === 'complete_habit_voice') {
					// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∏–ø CompleteHabitVoiceAction
					if (
						'id' in event.action &&
						typeof event.action.id === 'string' &&
						event.action.id
					) {
						const habitIdToComplete = event.action.id;
						console.log(
							'Received complete_habit_voice action for ID:',
							habitIdToComplete,
						);
						// –í—ã–∑—ã–≤–∞–µ–º –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–º–µ—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
						handleCompleteToday(habitIdToComplete);
					} else {
						console.warn(
							'Received complete_habit_voice action without a valid ID:',
							event.action,
						);
					}
				}
			}
			// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã —Å–æ–±—ã—Ç–∏–π data, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å action
		});

		// ... (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ theme, start, command, error, tts)

		return () => {
			// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

		};
		// –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: —Ç–µ–ø–µ—Ä—å –Ω–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å habits, —Ç–∞–∫ –∫–∞–∫ –º—ã –Ω–µ –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ –º–∞—Å—Å–∏–≤—É habits
		// –≤–Ω—É—Ç—Ä–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ delete_habit –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É.
		// –û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ getStateForAssistant –∏—Å–ø–æ–ª—å–∑—É–µ—Ç habits, —Ç–æ habits –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö.
		// –î–æ–ø—É—Å—Ç–∏–º, —á—Ç–æ getStateForAssistant –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å habits –¥–ª—è item_selector,
		// –ø–æ—ç—Ç–æ–º—É –æ—Å—Ç–∞–≤–ª—è–µ–º habits –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö.
	}, [activeHabits, handleDeleteHabit, getRecoveryState]); // –û—Å—Ç–∞–≤–ª—è–µ–º habits –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö, –µ—Å–ª–∏ getStateForAssistant –µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç

	return (
		<Router>
			<div className="app-container">
				<nav className="navbar">
					<h1 className="navbar-title">
						<img src={myCustomIcon} alt="–ú–æ—è –∏–∫–æ–Ω–∫–∞" className="navbar-icon" /> {/* –î–æ–±–∞–≤—å—Ç–µ –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ */}
						–¢—Ä–µ–∫–µ—Ä –ü—Ä–∏–≤—ã—á–µ–∫
					</h1>
					<div className="navbar-links">
						<Link to="/" className="nav-link">
							–ì–ª–∞–≤–Ω–∞—è
						</Link>
						{/* –ò–∑–º–µ–Ω—è–µ–º Link –Ω–∞ div –∏–ª–∏ button –∏ –¥–æ–±–∞–≤–ª—è–µ–º onClick */}
						<Link to="/stats" className="nav-link">
							–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
						</Link>
					</div>
				</nav>

				<main className="main-content">
					<button

						onClick={handleOpenModal}
						style={{ cursor: 'pointer'}}
					>
						–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤—ã—á–∫—É
					</button>
					<Routes>
						<Route
							path="/"
							element={
								<Home
									habits={activeHabits}
									onDeleteHabit={handleDeleteHabit}
									onCompleteToday={handleCompleteToday}
								/>
							}
						/>
						<Route path="/stats" element={<Stats completedHabits={completedHabits} />} />
					</Routes>

					{/* –£—Å–ª–æ–≤–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
					{showAddHabitModal && (
						<Modal onClose={handleCloseModal}>
							{/* –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ AddHabitForm */}
							<AddHabitForm
								onAdd={handleAddHabit}
								onClose={handleCloseModal}
								initialTitle={initialHabitTitle} // <-- –ü–µ—Ä–µ–¥–∞–µ–º —Å—é–¥–∞
							/>
						</Modal>
					)}

					{showDeleteConfirmationModal && (
						<Modal onClose={cancelDeleteHabit}>
							{' '}
							{/* –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∏–ª–∏ –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫ */}
							<DeleteConfirmation
								habitTitle={habitToDeleteTitle} // –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏
								onConfirm={() => confirmDeleteHabit(habitToDeleteId)} // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
								onCancel={cancelDeleteHabit} // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ–Ω—ã
							/>
						</Modal>
					)}

					{showCompletionModal &&
						completedHabitDetails && ( // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–µ—Ç–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏
							<Modal onClose={cancelCompletionModal}>
								{/* –ú–æ–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è */}
								<CompletionModal
									habit={completedHabitDetails} // –ü–µ—Ä–µ–¥–∞–µ–º –¥–µ—Ç–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–∏
									onConfirm={confirmCompletion} // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (–ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É)
									// –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –Ω–µ—Ç –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞", –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
								/>
							</Modal>
						)}
				</main>
			</div>
		</Router>
	);
};

export default App;
