import { useEffect, useRef, useState } from 'react';
import { createAssistant, createSmartappDebugger, AssistantAppState } from '@salutejs/client';
import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';
import Home from './pages/Home/Home';
import Stats from './pages/Stats';
import './styles/App.scss';
import { Habit } from './components/HabitCard';
import Modal from './components/Modal/Modal';
import AddHabitForm from './pages/AddHabit/AddHabitForm';

interface DeleteHabitAction {
  type: 'delete_habit';
  id: string; // –ù–æ–º–µ—Ä –ø—Ä–∏–≤—ã—á–∫–∏ (1-based)
}



const getTodayDateString = (): string => {
    const today = new Date();
    const year = today.getFullYear();
    const month = (today.getMonth() + 1).toString().padStart(2, '0');
    const day = today.getDate().toString().padStart(2, '0');
    return `${year}-${month}-${day}`;
};


const isDev = import.meta.env.MODE === 'development';

const generateUniqueId = (): string => {
    return Date.now().toString() + Math.random().toString(16).slice(2);
};

const initializeAssistant = (getState: () => AssistantAppState
  ) => {
  if (isDev) {
    return createSmartappDebugger({
      token: import.meta.env.VITE_SMARTAPP_TOKEN ?? '',
      initPhrase: '–∑–∞–ø—É—Å—Ç–∏ –¢—Ä–µ–∫–µ—Ä –ü—Ä–∏–≤—ã—á–µ–∫',
      getState,
      nativePanel:{
        defaultText: "–ü–æ–≥–æ–≤–æ—Ä–∏ —Å–æ –º–Ω–æ–π –±—Ä–∞—Ç–∏—à–∫–∞",
			screenshotMode: false,
			tabIndex: -1,
      }
    });
  }
    return createAssistant({ getState });
};

const App = () => {
  const assistantRef = useRef<ReturnType<typeof createAssistant>>();
  const [habits, setHabits] = useState<Habit[]>([
    {
			id: generateUniqueId(),
      title: '–ü–∏—Ç—å –≤–æ–¥—É',
      duration: 21,
      startTime: '07:00',
      endTime: '08:00',
      progress: 7,
      goal: '–ü–∏—Ç—å 2 –ª–∏—Ç—Ä–∞ –≤–æ–¥—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
      icon: 'üíß',
      //completedToday: true,
			lastCompletedDate: undefined
    },
    {
			id: generateUniqueId(),
      title: '–ß–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É',
      duration: 30,
      startTime: '20:00',
      endTime: '21:00',
      progress: 15,
      goal: '–ü—Ä–æ—á–∏—Ç–∞—Ç—å 10 —Å—Ç—Ä–∞–Ω–∏—Ü –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
      icon: 'üìö',
      //completedToday: false,
			lastCompletedDate: undefined
    },
  ]);



  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç—å—é –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const [showAddHabitModal, setShowAddHabitModal] = useState(false);
  // –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏ –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
  const [initialHabitTitle, setInitialHabitTitle] = useState<string | undefined>(undefined);



const handleDeleteHabit = (idToDelete: string) => {
      console.log('Attempting to delete habit with ID:', idToDelete);
      // –§–∏–ª—å—Ç—Ä—É–µ–º —Å–ø–∏—Å–æ–∫, –æ—Å—Ç–∞–≤–ª—è—è –≤—Å–µ –ø—Ä–∏–≤—ã—á–∫–∏, –∫—Ä–æ–º–µ —Ç–æ–π, —É –∫–æ—Ç–æ—Ä–æ–π —Å–æ–≤–ø–∞–¥–∞–µ—Ç ID
      setHabits(prevHabits => {
          const newHabits = prevHabits.filter(habit => habit.id !== idToDelete);
          console.log('New habits list after deletion:', newHabits);
          return newHabits;
      });
      // –ù–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏–Ω–¥–µ–∫—Å–∞, filter —Å–∞–º —Å–ø—Ä–∞–≤–∏—Ç—Å—è
  };




  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const handleOpenModal = () => setShowAddHabitModal(true);
  const handleCloseModal = () => {
    setShowAddHabitModal(false);
    // –û—á–∏—â–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    setInitialHabitTitle(undefined);
  };


  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–π —Ç–∞–∫–∂–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
 	const handleAddHabit = (newHabitData: Omit<Habit, 'id' | 'completedToday' | 'lastCompletedDate'>) => {
    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç Habit —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID
    const habitWithId: Habit = {
        ...newHabitData,
        id: generateUniqueId(), // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
        lastCompletedDate: undefined
				//completedToday: newHabitData.completedToday ?? false, // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ completedToday –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é false)
    };
    setHabits(prev => [...prev, habitWithId]);
    handleCloseModal();
  };


	const handleCompleteToday = (idToComplete: string) => {
      console.log('Attempting to mark habit as completed today for ID:', idToComplete);
      const todayString = getTodayDateString(); // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É

      setHabits(prevHabits => {
          return prevHabits.map(habit => {
              // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–∏–≤—ã—á–∫—É –ø–æ ID
              if (habit.id === idToComplete) {
                  // *** –õ–æ–≥–∏–∫–∞ –æ—Ç–º–µ—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –º–µ–Ω—å—à–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ***
                  if (habit.progress < habit.duration) {
                       console.log(`Increasing progress and marking date for habit ${idToComplete}.`);
                       // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –ø—Ä–∏–≤—ã—á–∫–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
                       return {
                           ...habit,
                           progress: habit.progress + 1, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–∞ 1
                           lastCompletedDate: todayString, // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
                       };
                  } else {
                      // –ï—Å–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å —É–∂–µ –¥–æ—Å—Ç–∏–≥ –∏–ª–∏ –ø—Ä–µ–≤—ã—Å–∏–ª –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
                      console.log(`Habit ${idToComplete} has already reached its duration goal.`);
                      return habit;
                  }
              }
              // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Ö –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
              return habit;
          });
      });
  };


   useEffect(() => {
    const assistant = initializeAssistant(() => {
        // ... –≤–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è getStateForAssistant, –≤–æ–∑–º–æ–∂–Ω–æ –ø—É—Å—Ç–∞—è –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–∞
			return {
             item_selector: {
                 items: habits.map((habit, index) => ({ id: habit.id, title: habit.title, number: index + 1 })),
                 ignored_words: ['—É–¥–∞–ª–∏—Ç—å', '—É–¥–∞–ª–∏', '–Ω–æ–º–µ—Ä', '–ø—Ä–∏–≤—ã—á–∫—É'],
             }
        };
        return {};
    });
    assistantRef.current = assistant;
/* eslint-disable  @typescript-eslint/no-explicit-any */
    assistant.on('data', (event: any) => { // –¢–µ–ø–µ—Ä—å event –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å event.action
      console.log('assistant.on(data)', event);

      // *** –í–æ—Ç —Ç—É—Ç –∫–ª—é—á–µ–≤–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: –ø—Ä–æ–≤–µ—Ä—è–µ–º event.action ***
      if (event.action) {
        console.log('Assistant action received:', event.action);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è 'add_habit' –∏ –µ—Å—Ç—å –ø–æ–ª–µ title
        if (event.action.type === 'add_habit' && typeof event.action.title === 'string') {
          const habitTitleFromAssistant = event.action.title;
          console.log('–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏ –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:', habitTitleFromAssistant);

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
          setInitialHabitTitle(habitTitleFromAssistant);

          // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
          setShowAddHabitModal(true);
        }
				 else if (event.action.type === 'delete_habit') {
             // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª–µ id —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π
             // –¢–∏–ø HandledActions —É–∂–µ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç TypeScript, —á—Ç–æ —É delete_habit –µ—Å—Ç—å id
             const deleteAction = event.action as DeleteHabitAction; // –ü—Ä–∏–≤–æ–¥–∏–º –∫ —Ç–∏–ø—É —É–¥–∞–ª–µ–Ω–∏—è

             // *** –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏ —Ç–∏–ø –ø–æ–ª—è id ***
             if (typeof deleteAction.id === 'string' && deleteAction.id) {
                 const habitIdToDelete = deleteAction.id; // –ü–æ–ª—É—á–∞–µ–º ID –Ω–∞–ø—Ä—è–º—É—é –∏–∑ action

                 console.log('Received delete_habit action for ID:', habitIdToDelete);

                 // *** –í–´–ó–´–í–ê–ï–ú handle delete habit –ù–ê–ü–†–Ø–ú–£–Æ –° –ü–û–õ–£–ß–ï–ù–ù–´–ú ID ***
                 // –õ–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–æ–º–µ—Ä—É –∏ –∏–Ω–¥–µ–∫—Å—É –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –±—ç–∫–µ–Ω–¥ –ø—Ä–∏—Å–ª–∞–ª ID
                 handleDeleteHabit(habitIdToDelete);
                 console.log(`Requested deletion for habit with ID: ${habitIdToDelete}`);

             } else {
                 // –ï—Å–ª–∏ –ø–æ–ª–µ id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø—Ä–∏—à–ª–æ –æ—Ç –±—ç–∫–µ–Ω–¥–∞
                 console.warn('Received delete_habit action without a valid ID:', event.action);
                 // –í–æ–∑–º–æ–∂–Ω–æ, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–ª—É—á–∏–ª –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–∏–≤—ã—á–∫–∏, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å."
                 // assistantRef.current?.sendData({ type: 'tts', value: "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫—É—é –ø—Ä–∏–≤—ã—á–∫—É —É–¥–∞–ª–∏—Ç—å." });
             }
        }
        // --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –û–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏ –ø–æ ID ---

        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ action
				else if (event.action.type === 'complete_habit_voice') { // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∏–ø CompleteHabitVoiceAction
             if ('id' in event.action && typeof event.action.id === 'string' && event.action.id) {
                 const habitIdToComplete = event.action.id;
                 console.log('Received complete_habit_voice action for ID:', habitIdToComplete);
                 // –í—ã–∑—ã–≤–∞–µ–º –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–º–µ—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
                 handleCompleteToday(habitIdToComplete);
             } else {
                 console.warn('Received complete_habit_voice action without a valid ID:', event.action);
             }
        }
      }
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã —Å–æ–±—ã—Ç–∏–π data, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å action
    });

    // ... (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ theme, start, command, error, tts)

    return () => {
        // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    };
    // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: —Ç–µ–ø–µ—Ä—å –Ω–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å habits, —Ç–∞–∫ –∫–∞–∫ –º—ã –Ω–µ –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ –º–∞—Å—Å–∏–≤—É habits
    // –≤–Ω—É—Ç—Ä–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ delete_habit –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É.
    // –û–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ getStateForAssistant –∏—Å–ø–æ–ª—å–∑—É–µ—Ç habits, —Ç–æ habits –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö.
    // –î–æ–ø—É—Å—Ç–∏–º, —á—Ç–æ getStateForAssistant –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å habits –¥–ª—è item_selector,
    // –ø–æ—ç—Ç–æ–º—É –æ—Å—Ç–∞–≤–ª—è–µ–º habits –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö.
  }, [habits]); // –û—Å—Ç–∞–≤–ª—è–µ–º habits –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö, –µ—Å–ª–∏ getStateForAssistant –µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç


  return (
    <Router>
      <div className="app-container">
        <nav className="navbar">
          <h1 className="navbar-title">üß† –¢—Ä–µ–∫–µ—Ä –ü—Ä–∏–≤—ã—á–µ–∫</h1>
          <div className="navbar-links">
            <Link to="/" className="nav-link">–ì–ª–∞–≤–Ω–∞—è</Link>
            {/* –ò–∑–º–µ–Ω—è–µ–º Link –Ω–∞ div –∏–ª–∏ button –∏ –¥–æ–±–∞–≤–ª—è–µ–º onClick */}
            <Link to="/stats" className="nav-link">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</Link>
          </div>
        </nav>

        <main className="main-content">
					<button className="nav-link" onClick={handleOpenModal} style={{ cursor: 'pointer' }}>
              –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤—ã—á–∫—É
            </button>
          <Routes>
            <Route path="/" element={<Home habits={habits}  onDeleteHabit={handleDeleteHabit} onCompleteToday={handleCompleteToday}/>} />
            <Route path="/stats" element={<Stats />} />
          </Routes>

          {/* –£—Å–ª–æ–≤–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
          {showAddHabitModal && (
            <Modal onClose={handleCloseModal}>
              {/* –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ AddHabitForm */}
              <AddHabitForm
                onAdd={handleAddHabit}
                onClose={handleCloseModal}
                initialTitle={initialHabitTitle} // <-- –ü–µ—Ä–µ–¥–∞–µ–º —Å—é–¥–∞
              />
            </Modal>
          )}

        </main>
      </div>
    </Router>
  );
};

export default App;
