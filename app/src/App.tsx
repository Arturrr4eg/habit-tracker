import { useEffect, useRef, useState } from 'react';
import { createAssistant, createSmartappDebugger } from '@salutejs/client';
import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';
import Home from './pages/Home';
import AddHabit from './pages/AddHabit/AddHabit';
import Stats from './pages/Stats';
import './styles/App.scss';
import { Habit } from './components/HabitCard';






const initializeAssistant = () => {
  const assistantParams = {
    token: import.meta.env.VITE_SMARTAPP_TOKEN || '',  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    initPhrase: '–∑–∞–ø—É—Å—Ç–∏ –¢—Ä–µ–∫–µ—Ä_–ü—Ä–∏–≤—ã—á–µ–∫',
    getState: () => {
      // –ó–¥–µ—Å—å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω—É–∂–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      return {
        // –ó–¥–µ—Å—å —Ç–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–ª–∏ –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
      };
    }
  };

  return createSmartappDebugger(assistantParams); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å getState
};


const App = () => {
	const assistantRef = useRef<ReturnType<typeof createAssistant>>();
	const [habits, setHabits] = useState<Habit[]>([
		{
			title: '–ü–∏—Ç—å –≤–æ–¥—É',
			duration: 21,
			startTime: '07:00',
			endTime: '08:00',
			progress: 40,
			goal: '–ü–∏—Ç—å 2 –ª–∏—Ç—Ä–∞ –≤–æ–¥—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
			icon: 'üíß',
			completedToday: true,
		},
		{
			title: '–ß–∏—Ç–∞—Ç—å –∫–Ω–∏–≥—É',
			duration: 30,
			startTime: '20:00',
			endTime: '21:00',
			progress: 60,
			goal: '–ü—Ä–æ—á–∏—Ç–∞—Ç—å 10 —Å—Ç—Ä–∞–Ω–∏—Ü –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
			icon: 'üìö',
			completedToday: false,
		},
	]);

	useEffect(() => {
		const assistant = initializeAssistant();
		assistantRef.current = assistant;

		// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
		assistant.on('data', (event) => {
			if (event.type === 'smart_app_data' && event.smart_app_data?.type === 'ADD_HABIT') {
				const newHabit = event.smart_app_data.payload;
				console.log('–î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–∏–≤—ã—á–∫–∞ –≥–æ–ª–æ—Å–æ–º:', newHabit);

				// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –ø—Ä–∏–≤—ã—á–∫—É –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
				setHabits((prev) => [...prev, newHabit]);
			}
		});
	}, []);



	return (
		<Router>
			<div className="app-container">
				<nav className="navbar">
					<h1 className="navbar-title">üß† –•–∞–±–∏—Ç –¢—Ä–µ–∫–µ—Ä</h1>
					<div className="navbar-links">
						<Link to="/" className="nav-link">–ì–ª–∞–≤–Ω–∞—è</Link>
						<Link to="/add" className="nav-link">–î–æ–±–∞–≤–∏—Ç—å</Link>
						<Link to="/stats" className="nav-link">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</Link>
					</div>
				</nav>

				<main className="main-content">
					<Routes>
						<Route path="/" element={<Home habits={habits} />} />
						<Route
							path="/add"
							element={
								<AddHabit
									onAdd={(habit) => {
										console.log('–ù–æ–≤–∞—è –ø—Ä–∏–≤—ã—á–∫–∞ –≤—Ä—É—á–Ω—É—é:', habit);
										setHabits((prev) => [...prev, habit]);
									}}
								/>
							}
						/>
						<Route path="/stats" element={<Stats />} />
					</Routes>
				</main>
			</div>
		</Router>
	);
};

export default App;
